HELLO WORLD
#include<stdio.h>
int main()
{
    printf("Hello World");
    return 0;
}
Output: Hello World

ADDITION
#include<stdio.h>
int main()                                     #include<stdio.h>
{                                              int main()
    int a,b;                                   {
    printf("Enter a");                             int a=100, b=50;
    scanf("%d", &a);                               printf("Sum is %d", a+b);
    printf("Enter b");                             return 0;
    scanf("%d", &b);                           }
    printf("The sum is %d", a+b);              Output: The sum is 150
    return 0;
}
Output: Enter a 10                             SIZE
Enter b 49                                  #include<stdio.h>
The sum is 59                               int main()
                                            {
MULTIPLICATION                                  printf("%lu \n", sizeof(int));
#include<stdio.h>                               printf("%lu \n", sizeof(float));
int main()                                      printf("%lu \n", sizeof(char));
{                                               printf("%lu \n", sizeof(double));
	int a,b;                                printf("%lu \n", sizeof(long));
	printf("Enter a");                      return 0;                  
	scanf("%d",&a);                     }
	printf("Enter b");                 OUTPUT: 4
	scanf("%d",&b);                            4
	printf("Product is %d", a*b);              1
	return 0;                                  8
}                                                  4
OUTPUT: Enter a10                      
Enter b20                                   PRINTING MULTIPLICATION TABLE:
Product is 200                                #include<stdio.h>
                                              int main()
 MODULO:                                      {
 #include<stdio.h>                                int a;
int main()                                        printf("Enter the number");
{                                                 scanf("%d", &a);                     NOTE: Do not forget to use & before variable whenever we use %
	int a=65, b=7;                            printf("The table of %d is:\n", a);
	printf("a % b= %d", a%b);                 printf("%d * 1 = %d\n", a, a*1);
	return 0;                                 printf("%d * 2 = %d\n", a, a*2);
}                                                 printf("%d * 3 = %d\n", a, a*3);
OUTPUT: a b= 2                                    printf("%d * 4 = %d\n", a, a*4);
                                                  printf("%d * 5 = %d\n", a, a*5);
ARITHMETIC OPERATORS:                             printf("%d * 6 = %d\n", a, a*6);
#include<stdio.h>                                 printf("%d * 7 = %d\n", a, a*7);
int main()                                        printf("%d * 8 = %d\n", a, a*8);
{                                                 printf("%d * 9 = %d\n", a, a*9);
	int a=65, b=72;                           printf("%d * 10 = %d\n", a, a*10);
	printf("a==b = %d\n", a==b);              return 0;
	printf("a!=b = %d\n", a!=b);          }
	printf("a>b = %d\n", a>b);            OUTPUT: Enter the Number
	printf("a<b = %d\n", a<b);                    6
	printf("a>=b = %d\n", a>=b);                  The table of 6 is:
	printf("a<=b = %d\n", a<=b);                  6 * 1 = 6
	return 0;                                     6 * 2 = 12
}	                                              .
Output: a==b = 0                                      .
a!=b = 1                                              6 * 10 = 60
a>b = 0
a<b = 1
a>=b = 0
a<=b = 1
NOTE: && NEEDS BOTH VALUES TRUE TO GIVE ANSWER AS 1, || NEEDS ONE VALUE AS TRUE TO GIVE ANSWER AS 1, ! (LOGICAL NOT) REVERSES THE VALUE OF 0 TO 1 AND VICEVERSA. 
      EXCLUSIVE OR OPERATOR (A^B) REQUIRES ONE VALUE TO BE TRUE AND ONE TO BE FALSE TO GIVE ANSWER AS 1 OTHERWISE IT WILL GIVE 0.

BASIC:
#include<stdio.h>                                               #include<stdio.h>
int main()                                                      int main()
{                                                               {
	int a=45, b=85;                                              int a=45;
	printf("Value of a and b is %d", b,a);                       float b=85.333;
	return 0;                                                    printf("Value of a is %d and b is %f", a,b);
}                                                                    return 0;
OUTPUT:Value of a and b is 85                                   }
                                                                 OUTPUT: Value of a is 45 and b is 85.333000
NOTE: If we use %a.bf (ex: %0.7f then it will give accuracy upto 7 decimal points. Hera 85.3330000..Similarly, for %10.4f it will leave a space for 10 characters that 
is ___85.3300 (3 spaces in the beginning)
%c-character  %d-int  %f-float  %l-long  %lf-double  %Lf-long double

CONSTANTS:
#include<stdio.h>
#define PI 3.14  //here it is constant and cannot be changed in the program further..Also no ; req. here
int main()
{
	printf("Value of pi is %f", PI);       //we can also use const keyword ex: const b=3.14..Value can't be changed in the whole program
	return 0;
}
OUTPUT: Value of pi is 3.140000                  NOTE: \n is one single character.

IF ELSE CONDITIONS
#include<stdio.h>
int main()
{
	int age;
	printf("Enter your age");             
	scanf("%d", &age);                               OUTPUT:Enter your age65
	if(age>=18) {                                           You can vote
		printf("You can vote"); 
	}                                                       Enter your age16               NOTE: No ; : or , after if
	else if(age>=10){                                       You can vote for kids
		printf("You can vote for kids");             
	}                                                       Enter your age8                                                     
	else {                                                  You cannot vote
		printf("You cannot vote");
	}
	return 0;
}

SWITCH CASE STATEMENT:

#include<stdio.h>
int main()
{
	int a;
	printf("Enter the number");
	scanf("%d", &a);                                  OUTPUT: Enter the number17
	switch(a){                                                Number is 17
		case 17:
		printf("Number is 17");                           Enter the number4
		break;                                            Number is 4
		
		case 4:                                           Enter the number20
		printf("Number is 4");                             Number does not exist
		break;
		
		default:                                   NOTE: Here we use colon (:) next to case and default..Switch and case can be int and char only..All CASES 
		printf("Number does not exist");                 will come under SWITCH.. No ; : , next to switch and there will always come the variable after switch
	}                                                        If we don't use break, it will print all the cases.
	return 0;
	
}

NESTED SWITCH CASE:
#include<stdio.h>
int main()
{
	int a, marks;
	printf("Enter the number ");           OUTPUT:Enter the number 17
	scanf("%d", &a);                              Enter marks 84                             
	printf("Enter marks ");                       Number is 17
	scanf("%d", &marks);                          Marks are 84
	switch(a){
		case 17:
		printf("Number is 17\n");           Enter the number 17
		switch(marks) {                     Enter marks 30
			                            Number is 17
                case 84:                            Marks are not 84
		printf("Marks are 84");
		break;                             Enter the number 20
		                                   Enter marks 90
		default:
		printf("Marks are not 84");      (No result because the marks is nested inside 'a' that is number..If a will not be equal to 17 then it will not 
}                                                 continue ahead.) But if we want to print that the number is not 17 then we can add another default between the second
	}                                         last and the third last bracket which will become the default of switch(a)..Write printf("Number is not 17"); after 
	return 0;                                 that default.
}

DO WHILE LOOP:
#include<stdio.h>
int main()
{
	int a, i=0;
	printf("Enter a number ");        OUTPUT: Enter a number 10
	scanf("%d", &a);                          0123456789
	
	do {
		printf("%d", i);         NOTE: Here we will not use & before variable because it is only used in scanf that is whenever we take a value from user.
		i=i+1;
		
	} while(i<a);
	return 0;
	
}
MULTIPLICATION TABLE USING DO WHILE LOOP:
#include<stdio.h>
int main()
{
	int a; int i=1;                       OUTPUT: Enter a number 3
	printf("Enter a number ");                    3 * i = 36 * i = 39 * i = 312 * i = 315 * i = 318 * i = 321 * i = 324 * i = 327 * i = 330 * i = 3
	scanf("%d", &a);
	do{
		printf("%d * i = %d", a*i, a);
		i=i+1;
        }  while(i<11);
	return 0;
}

WHILE LOOP:
#include<stdio.h>                                 OUTPUT: Enter the number 10
int main()                                                0
{                                                         1
	int a, i=0;                                       2
	printf("Enter the number ");                      3
	scanf("%d", &a);                                  4
	while(i<a) {                                      5
		printf("%d\n", i);                        6
		i=i+1;                                    7
	}                                                 8
	return 0;                                         9
	
}

FOR LOOP:
#include<stdio.h>
int main()                             OUTPUT: 01234
{
	int i;
	for(i=0; i<5; i++) {
		printf("%d", i);
	}
	return 0;
}

FOR LOOP 2:
#include<stdio.h>
int main()                                             OUTPUT: 0 0
{                                                              1 1
	int i, j;                                              2 2                            
	for(i=0, j=0; i<5, j<5; i++, j++) {                    3 3     NOTE: Here we could also write int i=0, j=0;
		printf("%d %d\n", i, j);                       4 4                                    printf(; i<5, j<5; i++, j++)
	}                                                      5 5           It will print the same result.              
	return 0;
	               NOTE: If we write (i=0, j=0; i<5, j<3; i++, j++) it will consder the last term of expression 2 i.e it will consider j<3 and print 00 11 22 only
}                            for(i=0, j=0; j=3, i<5; i++, j++) it will make j as 3 but will print values of i<5 i.e 30 31 32 33 34

USE OF LOOPS WITHOUT BREAK AND CONTINUE STATEMENTS:
#include<stdio.h>
int main()                                  OUTPUT: Enter your age 3
{                                                   Enter your age 4 
	int i;                                      Enter your age 6
	for(i=0; i<10; i++) {                       Enter your age 12
		                                   (Stopped executing after this because 12>10)
	printf("Enter your age ");
	scanf("%d\n", &i);
	}
	return 0;
}

JUST:  (WRONG) The aim is if we enter the number 17 then it should print numbers starting from 0 to infinite loop..If we enter the number 4 then it should print Done.
#include<stdio.h>
int main()
{
	int a,i=0;
	printf("Enter the number");
	scanf("%d\n", &a);                    OUTPUT: Enter the number17
		do {
		printf("%d\n", i);
	    i=i+1;	
	}
	while (a=17);
	if(a=4) {
		printf("Done");
	} 
	return 0; 
}

JUST 2: 
#include<stdio.h>
int main()
{
	int a,i=0;                          OUTPUT: Enter the number17
	printf("Enter the number");                 0
	scanf("%d", &a);                            1
	if(a==17) {                                 2
		do {                                3
		printf("%d\n", i);                  4                      NOTE: Put == sign here in the bracktet
	    i=i+1;	
	}                                          Enter the number4
	while (i<5);                               Done                          
}                                                  
else {                                             
	printf("Done");                            
}                                                  
	
	return 0; 
}

BREAK WITH FOR LOOP
#include<stdio.h>
int main()
{
	int i;
	for(i=0; i<10; i++) {                  NOTE: Here the output is slight different than what we expect. In the beginning it takes says Enter your age and we 
		printf("Enter your age");            enter 2 but it does not show Enter your age again. We have to enter another smaller number here, 3 to get the 
		scanf("%d\n", &i);                   required output. Then it will work fine. But as soon as you enter a number greater than 10, it will ask you for 
		if(i>10) {                           Enter a number instead of stopping..Now again if you enter a number greater than 10 then it will stop.
			break;
		}
	}              
	
}
OUTPUT:                       NOTE 2: Jis bhi loop ke andar ho bas waha se bahar aaoge if you use break.. In case you are using a nested loop then you won't come out 
Enter your age2                       of the other loop where break is not used.
3
Enter your age4
Enter your age5
Enter your age7
Enter your age17
Enter your age20

CONTINUE STATEMENT USING LOOP:
The continue statement skips some code inside the loop and continues with the next iteration. It is mainly used for a condition so that we can skip some lines of code
for a particular condition. Break statement will skip the whole loop but continue will skip a particular iteration.
#include<stdio.h>
int main()
{
	int i, age;
	for(i=0; i<10; i++) {
		printf("Enter your age\n", i);
		scanf("%d\n", &age);
		if(age>10) {
			continue;
		}
		printf("We have not come across any continue statement\n");
	}
	return 0;
}
OUTPUT: Enter your age
4
4
We have not come across any continue statement
Enter your age
5
We have not come across any continue statement
Enter your age
17
We have not come across any continue statement
Enter your age
17
Enter your age
11
Enter your age

CONVERSION OF KG IN G
#include<stdio.h>                                     #include<stdio.h>
#include<conio.h>                                     int main()
int main()                                            {                                     
{                                                          float kg, g;
	float kg, g;                                       printf("Enter a weight");
	printf("Enter a weight");                          scanf("%f", &kg);                        
	scanf("%f", &kg);                                  g=kg * 1000;
	g=kg * 1000;                                       printf("The value of g is %f", g);
	printf("Weight in grams is %f\n", g);              return 0;             
	getch();                                     }
	return 0;
}

OUTPUT: Enter a weight 4
        The value of g is 4000.000
	
PRINT EVEN NUMBERS BETWEEN 1-100:
#include<stdio.h>
int main()
{
	int i;
	printf("Even numbers between 1-100");
	for(i=0; i<=100; i++){
		if(i%2==0) {
			printf("%d\n", i);
		}
	}
	return 0;
}
NOTE: goto statement is not preferable for programmers.

TYPECASTING: Converting one datatype into another datatype.
#include<stdio.h>
int main()                                                 OUTPUT:The value of a is 10.800000
{
	float a= (float)54/5;
	printf("The value of a is %f", a);
	return 0;
}
NOTE: If we had just written float a = 54/5 it would give an answer as 10.00000 because 54 and 4 are both integers so we changed their datatype using typecasting.

#include<stdio.h>
int main()
{
	float a= (int)17.44;
	printf("The value of a is %f", a);  OUTPUT: The value of a is 17.000000
	return 0;
}

DECLARING, DEFINING AND CALLING THE FUNCTION: 1) WITH ARGUMENTS AND WITH RETURN VALUES
#include<stdio.h>                                                     #include<stdio.h>
int sum (int a, int b) {                                              int sum(int a, int b);  HERE WE DECLARED THE FUNCTION TO THE COMPILER
		return a+b;                                           int main()
	}                                                             {
int main()                                                               int a,b,c;  
{                                                                        a=17;
	                                                                 b=4;
	int a,b,c;               OUTPUT: The sum is 21                   c= sum(a,b);
	a=17;                                                            printf("The sum is %d", c);
	b=4;                                                             return 0;
	c= sum(a,b);                                                  }
	printf("The sum is %d", c);                                   int sum (int a, int b) {      AND CALLED IT LATER              
	return 0;                                                     return a+b;
}                                                                     }
	
2) WITH ARGUMENTS AND WITHOUT RETURN VALUES:

	
	
















